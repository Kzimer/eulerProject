#!/bin/bash

#*******************************************#
#                 exectime                  #
#       written by github.com/Kzimer        #
#             February 26, 2013             #
#                                           #
#   Evaluate the average execution time     #
#          of scripts and programs.         #
#*******************************************#


# ========================================= #
# difftime ()                               #
# Computes a command's execution time once. #
# Parameters: the command you want to test, #
#             with all its own parameters.  #
# Returns: nothing. The result is echoed to #
#          stdout                           #
# ========================================= #
difftime ()
{
    START=$(date +%s.%N)    # time signature just before the execution
    $* 2>&1 1>/dev/null     # discard all outputs of the command
    END=$(date +%s.%N)      # time signature just after the execution
    DIFF=$(echo "$END - $START" | bc)
    echo $DIFF
}


if [ $# -gt 2 ] # there has to be at least two "full" parameters
then
    N=$1
    shift
    CMD=""
    while [ $# -gt 0 ]
        do  CMD="$CMD $1"
            shift
        done
    sum='0.'
    min='10000000.'
    max='0.'
    for i in `seq $N`
        do  tmp=`difftime $CMD`
            sum=$(echo "$sum + $tmp" | bc)
            if [[ $(echo "$max < $tmp" | bc) -eq 1 ]]
            then
                max=$tmp
            fi
            if [[ $(echo "$min > $tmp" | bc) -eq 1 ]]
            then
                min=$tmp
            fi
        done
    avg=$(echo "scale=1; 1000. * $sum / $N;" | bc -l)
    min=$(echo "scale=1; $min / 0.001;" | bc -l)
    max=$(echo "scale=1;  $max / 0.001;" | bc -l)
    echo "min/avg/max = $min/$avg/$max ms"
    exit 0

else
    echo "Usage: ./exectime numberOfTest command [arg...]" >&2
    exit 1
fi
